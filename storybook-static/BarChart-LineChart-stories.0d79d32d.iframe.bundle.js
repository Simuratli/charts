"use strict";(self.webpackChunk_simuratli_charts=self.webpackChunk_simuratli_charts||[]).push([[859],{"./src/BarChart/LineChart.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{LineChartComponent:()=>LineChartComponent,__namedExportsOrder:()=>__namedExportsOrder,default:()=>LineChart_stories});var react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./node_modules/d3/src/index.js");const BarChart=({data,width,height,xAxisLabel,yAxisLabel,lineColor="#00bfa5"})=>{const margin_top=40,margin_right=20,margin_bottom=50,margin_left=100,graphWidth=width?width-margin_left-margin_right:560-margin_left-margin_right,grapHeight=height?height-margin_top-margin_bottom:400-margin_top-margin_bottom;return(0,react.useEffect)((()=>{data&&(data=>{const svg=src.Ltv(".canvas").append("svg").attr("width",graphWidth+margin_left+margin_right).attr("height",grapHeight+margin_top+margin_bottom);console.log(svg,"svgsvgsvg");const graph=svg.append("g").attr("width",graphWidth).attr("height",grapHeight).attr("transform",`translate(${margin_left},${margin_top})`),x=src.w7C().range([0,graphWidth]),y=src.m4Y().range([grapHeight,0]),xAxisGroup=graph.append("g").attr("class","x-axis").attr("transform",`translate(0,${grapHeight})`),yAxisGroup=graph.append("g").attr("class","y-axis"),line=src.n8j().x((function(d){return x(d.xValue)})).y((function(d){return y(d.yValue)})),path=graph.append("path"),dottedLines=graph.append("g").attr("class","lines").style("opacity",0),xDottedLine=dottedLines.append("line").attr("stroke","#aaa").attr("stroke-width",1).attr("stroke-dasharray",4),yDottedLine=dottedLines.append("line").attr("stroke","#aaa").attr("stroke-width",1).attr("stroke-dasharray",4);data.sort(((a,b)=>a.xValue-b.xValue));const xExtent=src.Xxv(data,(d=>d.xValue));xExtent[0]&&xExtent[1]&&x.domain(xExtent);const yMax=src.T9B(data,(d=>d.yValue));void 0!==yMax&&y.domain([0,yMax]),path.data([data]).attr("fill","none").attr("stroke",lineColor).attr("stroke-width",2).attr("d",line);const xAxes=src.l78(x).ticks(4),yAxes=src.V4s(y).ticks(4).tickFormat((d=>d+"m"));xAxisGroup.call(xAxes),yAxisGroup.call(yAxes),xAxisLabel&&svg.append("text").attr("class","x label").attr("text-anchor","end").attr("x",width||560).attr("y",height?height-6:394).text(xAxisLabel),yAxisLabel&&svg.append("text").attr("class","y label").attr("text-anchor","end").attr("y",10).attr("dy",".75em").attr("transform","rotate(-90)").text(yAxisLabel),xAxisGroup.selectAll("text").attr("transform","rotate(-40)").attr("text-anchor","end");const circles=graph.selectAll("circle").data(data);circles.attr("cx",(d=>x(d.xValue))).attr("cy",(d=>y(d.yValue))),circles.enter().append("circle").attr("r",4).attr("cx",(d=>x(d.xValue))).attr("cy",(d=>y(d.yValue))).attr("fill","#ccc"),graph.selectAll("circle").on("mouseover",((d,i)=>{src.Ltv(d.currentTarget).transition().duration(100).attr("r",8).attr("fill","#fff").attr("stroke","#000").attr("stroke-width",.4).attr("cursor","pointer");const data=i;xDottedLine.attr("x1",x(data.xValue)).attr("x2",x(data.xValue)).attr("y1",grapHeight).attr("y2",y(data.yValue)),yDottedLine.attr("x1",0).attr("x2",x(data.xValue)).attr("y1",y(data.yValue)).attr("y2",y(data.yValue)),dottedLines.style("opacity",1)})).on("mouseleave",((d,i)=>{src.Ltv(d.currentTarget).transition().duration(100).attr("r",4).attr("stroke","#000").attr("stroke-width",0).attr("fill","#ccc").attr("cursor","pointer"),dottedLines.style("opacity",0)})),circles.exit().remove()})(data)}),[data]),react.createElement("div",{className:"canvas"})},LineChart=BarChart;BarChart.__docgenInfo={description:"",methods:[],displayName:"BarChart",props:{data:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  xValue: number;\n  yValue: number;\n}",signature:{properties:[{key:"xValue",value:{name:"number",required:!0}},{key:"yValue",value:{name:"number",required:!0}}]}}],raw:"Data[]"},description:""},width:{required:!1,tsType:{name:"number"},description:""},height:{required:!1,tsType:{name:"number"},description:""},xAxisLabel:{required:!1,tsType:{name:"string"},description:""},yAxisLabel:{required:!1,tsType:{name:"string"},description:""},lineColor:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"#00bfa5"',computed:!1}}}};const LineChart_stories={title:"Charts/LineChart",component:LineChart,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{data:{control:{type:"object"},description:"Data to be displayed in the Bar Chart"},width:{control:{type:"number"},defaultValue:560,description:"Width of the chart"},height:{control:{type:"number"},defaultValue:400,description:"Height of the chart"}},args:{data:[{xValue:342,yValue:500},{xValue:4353,yValue:200},{xValue:465,yValue:1800},{xValue:456,yValue:100}],width:560,height:400}},LineChartComponent={args:{data:[{xValue:123,yValue:500},{xValue:345,yValue:200},{xValue:356,yValue:1800},{xValue:456,yValue:100}],width:650,xAxisLabel:"Elcan",lineColor:"#f74a69"}},__namedExportsOrder=["LineChartComponent"];LineChartComponent.parameters={...LineChartComponent.parameters,docs:{...LineChartComponent.parameters?.docs,source:{originalSource:'{\n  args: {\n    data: [{\n      xValue: 123,\n      yValue: 500\n    }, {\n      xValue: 345,\n      yValue: 200\n    }, {\n      xValue: 356,\n      yValue: 1800\n    }, {\n      xValue: 456,\n      yValue: 100\n    }],\n    width: 650,\n    xAxisLabel: "Elcan",\n    lineColor: "#f74a69"\n  }\n}',...LineChartComponent.parameters?.docs?.source}}}}}]);